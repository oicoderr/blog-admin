[{"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/index.tsx":"1","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/reportWebVitals.js":"2","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/serviceWorker.ts":"3","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/App.tsx":"4","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/router/index.tsx":"5","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/common/layout/index.tsx":"6","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/article-list/index.tsx":"7","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/login/index.tsx":"8","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/article-add/index.tsx":"9","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/message-add/index.tsx":"10","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/messages-list/index.tsx":"11","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/article-comments/index.tsx":"12","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/project-add/index.tsx":"13","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/categories/index.tsx":"14","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/tags/index.tsx":"15","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/home/index.tsx":"16","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/category-add/index.tsx":"17","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/tag-add/index.tsx":"18","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/projects/index.tsx":"19","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/utils/api.ts":"20","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/utils/index.ts":"21","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/common/layout/main.tsx":"22","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/common/layout/side.tsx":"23","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/article-list/article-config.tsx":"24","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/article-add/base-info.tsx":"25","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/article-add/edit.tsx":"26","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/messages-list/article-config.tsx":"27","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/article-comments/oprations.tsx":"28","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/article-comments/article-config.tsx":"29","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/messages-list/oprations.tsx":"30","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/project-add/add.tsx":"31","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/projects/oprations.tsx":"32","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/projects/article-config.tsx":"33","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/category-add/add.tsx":"34","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/tag-add/add.tsx":"35","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/tags/oprations.tsx":"36","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/tags/article-config.tsx":"37","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/categories/oprations.tsx":"38","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/categories/article-config.tsx":"39","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/common/components/page-layout.tsx":"40","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/utils/config.ts":"41","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/utils/http.ts":"42","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/utils/login.ts":"43","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/utils/public.ts":"44","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/project-add/config.ts":"45","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/common/layout/menu.tsx":"46","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/common/components/header-title/index.tsx":"47","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/common/components/bicon.tsx":"48","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/common/layout/menu-config.ts":"49"},{"size":556,"mtime":1612153750046,"results":"50","hashOfConfig":"51"},{"size":362,"mtime":1612153750054,"results":"52","hashOfConfig":"51"},{"size":5201,"mtime":1612153750054,"results":"53","hashOfConfig":"51"},{"size":354,"mtime":1612153750043,"results":"54","hashOfConfig":"51"},{"size":2267,"mtime":1615349878479,"results":"55","hashOfConfig":"51"},{"size":315,"mtime":1612153750045,"results":"56","hashOfConfig":"51"},{"size":3331,"mtime":1614764372109,"results":"57","hashOfConfig":"51"},{"size":1776,"mtime":1614251958488,"results":"58","hashOfConfig":"51"},{"size":4829,"mtime":1614334762475,"results":"59","hashOfConfig":"51"},{"size":221,"mtime":1612153750049,"results":"60","hashOfConfig":"51"},{"size":2714,"mtime":1615284349912,"results":"61","hashOfConfig":"51"},{"size":2573,"mtime":1615287436029,"results":"62","hashOfConfig":"51"},{"size":952,"mtime":1614746126783,"results":"63","hashOfConfig":"51"},{"size":2756,"mtime":1614241741314,"results":"64","hashOfConfig":"51"},{"size":2726,"mtime":1614766846815,"results":"65","hashOfConfig":"51"},{"size":1632,"mtime":1614604103535,"results":"66","hashOfConfig":"51"},{"size":288,"mtime":1614241162494,"results":"67","hashOfConfig":"51"},{"size":268,"mtime":1612153750053,"results":"68","hashOfConfig":"51"},{"size":1750,"mtime":1614744101977,"results":"69","hashOfConfig":"51"},{"size":3443,"mtime":1614751459882,"results":"70","hashOfConfig":"51"},{"size":97,"mtime":1612153750055,"results":"71","hashOfConfig":"51"},{"size":641,"mtime":1612153750045,"results":"72","hashOfConfig":"51"},{"size":459,"mtime":1612153750045,"results":"73","hashOfConfig":"51"},{"size":1959,"mtime":1614762848587,"results":"74","hashOfConfig":"51"},{"size":7063,"mtime":1614837222517,"results":"75","hashOfConfig":"51"},{"size":1033,"mtime":1612153750046,"results":"76","hashOfConfig":"51"},{"size":1208,"mtime":1615211944160,"results":"77","hashOfConfig":"51"},{"size":1298,"mtime":1615286396285,"results":"78","hashOfConfig":"51"},{"size":1558,"mtime":1615284154795,"results":"79","hashOfConfig":"51"},{"size":1299,"mtime":1614760990284,"results":"80","hashOfConfig":"51"},{"size":3115,"mtime":1614746512377,"results":"81","hashOfConfig":"51"},{"size":900,"mtime":1614761039103,"results":"82","hashOfConfig":"51"},{"size":832,"mtime":1612153750052,"results":"83","hashOfConfig":"51"},{"size":1146,"mtime":1614243791167,"results":"84","hashOfConfig":"51"},{"size":1126,"mtime":1614240385606,"results":"85","hashOfConfig":"51"},{"size":1309,"mtime":1614239254371,"results":"86","hashOfConfig":"51"},{"size":605,"mtime":1614234410719,"results":"87","hashOfConfig":"51"},{"size":1309,"mtime":1614240732767,"results":"88","hashOfConfig":"51"},{"size":605,"mtime":1614240732765,"results":"89","hashOfConfig":"51"},{"size":363,"mtime":1612153750043,"results":"90","hashOfConfig":"51"},{"size":170,"mtime":1614394804003,"results":"91","hashOfConfig":"51"},{"size":2510,"mtime":1614674063349,"results":"92","hashOfConfig":"51"},{"size":333,"mtime":1614603957075,"results":"93","hashOfConfig":"51"},{"size":129,"mtime":1612153750056,"results":"94","hashOfConfig":"51"},{"size":862,"mtime":1612153750051,"results":"95","hashOfConfig":"51"},{"size":1732,"mtime":1612153750045,"results":"96","hashOfConfig":"51"},{"size":233,"mtime":1612153750043,"results":"97","hashOfConfig":"51"},{"size":210,"mtime":1612153750043,"results":"98","hashOfConfig":"51"},{"size":2151,"mtime":1615350162905,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"4amtzd",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"102"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"102"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"102"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"102"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"102"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"102"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"102"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"102"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"102"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"102"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"102"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"102"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"102"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"102"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"102"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"102"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/index.tsx",[],["215","216"],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/reportWebVitals.js",[],["217","218"],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/serviceWorker.ts",[],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/App.tsx",[],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/router/index.tsx",[],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/common/layout/index.tsx",[],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/article-list/index.tsx",["219","220","221","222"],"import React, { useState, useEffect } from 'react'\nimport { Table, Divider, message, Popconfirm } from 'antd'\nimport { RouteComponentProps } from 'react-router'\nimport { TablePaginationConfig } from 'antd/es/table'\nimport { columns } from './article-config'\nimport PageLayout from '../../common/components/page-layout'\nimport { getArticles, delArt } from '../../utils/api'\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport './index.scss'\n\ntype EditableTableProps = Parameters<typeof Table>[0];\ntype ColumnTypes = Exclude<EditableTableProps['columns'], undefined>;\n\nconst ArticleList = (props:RouteComponentProps) => {\n  const [list, setList] = useState([])\n  const [page, setPage] = useState({ current: 1, total: 0 })\n  const [loading, setLoading] = useState(false)\n  const [load, setLoad] = useState(0)\n  const [visible, setVisible] = useState(false);\n  useEffect(() => {\n    (async () => {\n      setLoading(true)\n      const { data } = await getArticles({current_page: page.current})\n      \n      if (data.code === 200) {\n        const { list, pagination } = data.result\n        setList(list)\n        setPage({current: pagination.current_page, total: pagination.total})\n      }\n      setLoading(false)\n    })()\n  }, [load])\n  // 编辑\n  async function edit (id: string, title: string) {\n    props.history.push(`/article-add?id=${id}`)\n  }\n\n  // 删除\n  const showPopconfirm = () => {\n    setVisible(true);\n  };\n  async function del (id: string) {\n    const {data} = await delArt(id)\n    if (data.code) {\n      message.success(data.message)\n      setPage({ current: data.result.pagination.current_page, total: data.result.pagination.total })\n      setLoad(load + 1)\n    }\n  }\n  function cancel (){\n    setVisible(false);\n  }\n\n  const tableColumns = columns.map(col => {\n    if (col.dataIndex === 'operation') {\n      return {\n        ...col,\n        onCell: (record:any) => ({col, record, edit, del})\n      }\n    }\n    return col\n  })\n  const components = { body: { cell: TCell } }\n  function tableChange (pagination: TablePaginationConfig) {\n    setPage({ current: pagination.current || 1, total: pagination.total || 0 })\n    setLoad(load + 1)\n  }\n  return <PageLayout title='文章列表'>\n    <Table\n      onChange={tableChange}\n      components={components}\n      columns={tableColumns as ColumnTypes}\n      loading={loading}\n      dataSource={list}\n      bordered\n      size=\"middle\"\n      pagination={page}\n      rowKey=\"_id\" />\n  </PageLayout>\n}\n\nfunction TCell (props: any) {\n  const { children, col } = props\n  let res:any = col && col.dataIndex === 'operation' ? <Operate {...props} /> : children\n  return <td>{res}</td>\n}\n\nexport function Operate (props: any) {\n  const { edit, del, cancel, showPopconfirm, record} = props\n  const view = () => {\n    console.log('view')\n  }\n  return (\n    <div className=\"t_btn\">\n      <span onClick={view}>查看</span>\n      <Divider type=\"vertical\" />\n      <span onClick={() => edit(record.id)}>修改</span>\n      <Divider type=\"vertical\" />\n      <Popconfirm \n        title=\"Are you sure？\" \n        icon={<QuestionCircleOutlined />}\n        style={{ color: 'red' }}\n        onConfirm={() => del(record.id)}\n        onCancel={cancel}\n      >\n        <span onClick={showPopconfirm}>删除</span>\n      </Popconfirm>\n    </div>\n  )\n}\n\nexport default ArticleList\n","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/login/index.tsx",[],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/article-add/index.tsx",["223"],"import React, { useEffect, useState, useRef } from 'react'\nimport { Button, message, Modal } from 'antd'\nimport { useLocation } from 'react-router-dom'\nimport { RouteComponentProps } from 'react-router'\nimport './index.scss'\nimport './view-article.scss'\nimport BaseInfo from './base-info'\nimport Edit from './edit'\nimport HeaderTittle from '../../common/components/header-title'\nimport { addArticle, editeArt, getArticles, mdArt } from '../../utils/api'\nimport { useQuery } from '../../utils/index'\n\nexport default function AddArticle (props: RouteComponentProps) {\n  let myform: any = null\n  const [acontent, setAcontent] = useState({content: '', editContent: ''}) // 编辑文章\n  const [article, setArticle] = useState({}) // 文章基本信息\n  const [editContent, setEditContent] = useState('') // 编辑文章\n  const [title, setTitle] = useState('')\n  const [visible, setVisible] = useState(false);// 文章预览\n  const query = useQuery()\n  let location = useLocation()\n  const viewArticleDom = useRef<any>(null);\n  function submit () {\n    myform.submit()\n  }\n  async function openViewArticle() {\n    setVisible(true)\n    const res = await mdArt({\n      article: acontent.content\n    });\n    viewArticleDom.current.innerHTML = res.data.result.html\n  }\n\n  function getFormData(article:any, tagIds: Array<string>, categoriesIds: Array<string>, authorIds: Array<string>) {\n    if (acontent.content) {\n      let id = query.get('id')\n      if (id) {\n        edit(article, id, tagIds, categoriesIds, authorIds)\n      } else {\n        add(article, tagIds, categoriesIds, authorIds)\n      }\n    }\n  }\n\n  async function add (values: any, tagIds: Array<string>, categoriesIds: Array<string>, authorIds: Array<string>) {\n    const params = {...values, ...acontent }\n    console.log('params: ')\n    console.log(params)\n    const { data } = await addArticle({\n      title: params.title,\n      content: params.content,\n      editContent: params.editContent,\n      desc: params.desc,\n      top: params.top || false,\n      publish: params.publish || false,\n      tag: tagIds,\n      category: categoriesIds,\n      author: authorIds,\n      viewCount: params.viewCount,\n      likeCount: params.likeCount,\n      cover: params.cover\n    })\n    if (data.code) {\n      message.success(data.message)\n      props.history.push('/article')\n    }\n  }\n  async function edit (values: any, id: string, tagIds: Array<string>, categoriesIds: Array<string>, authorIds: Array<string>) {\n    const params = {...values, ...acontent}\n    const { data } = await editeArt(id, {\n      title: params.title,\n      content: params.content,\n      editContent: params.editContent,\n      desc: params.desc,\n      top: params.top,\n      publish: params.publish,\n      tag: tagIds,\n      category: categoriesIds,\n      author: authorIds,\n      viewCount: params.viewCount,\n      likeCount: params.likeCount,\n      cover: params.cover\n    })\n    if (data.code) {\n      message.success(data.message)\n      props.history.push('/article')\n    }\n  }\n  const editChange = (c: string, e: string) => {\n    setAcontent({content: c, editContent: e})\n  }\n  const saveFormRef = (formRef: any) => { myform = formRef }\n  // 获取编辑数据\n  useEffect(() => {\n    (async () => {\n      const id = query.get('id')\n      if (id) {\n        const { data } = await getArticles({id: id})\n        if (data.code) {\n          setArticle(data.result)\n          setEditContent(data.result.content)\n          setTitle('编辑文章')\n          setAcontent({content: data.result.content, editContent: data.result.editContent})\n        }\n      } else {\n        setArticle({'top': false, 'publish': true})\n        setEditContent('')\n        setTitle('添加文章')\n        setAcontent({content: '', editContent: ''})\n      }\n    })()\n  }, [location])\n  return (\n    <>\n      <HeaderTittle title={title} />\n      <div className=\"p20\">\n        <BaseInfo submit={getFormData} wrappedComponentRef={saveFormRef} article={article} />\n        <Edit content={editContent} editChange={editChange} />\n        <div className='btnbox'>\n          <Button type='primary' style={{width: '100px'}} onClick={() => submit()}>提 交</Button>\n          <Button type=\"primary\" style={{width: '100px', marginLeft: '20px'}} onClick={openViewArticle}>预览</Button>\n          {/* <Button danger style={{width: '100px', marginLeft: '20px'}} onClick={() => submit()}>存草稿</Button> */}\n        </div>\n        <Modal\n          title=\"文章预览\"\n          centered\n          visible={visible}\n          onOk={() => setVisible(false)}\n          onCancel={() => setVisible(false)}\n          width={1000}\n        >\n          <div className=\"view-markdown\">\n            <div ref={viewArticleDom} className=\"theme-default-content content__default\"></div>\n          </div>\n        </Modal>\n      </div>\n    </>\n  )\n}\n","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/message-add/index.tsx",[],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/messages-list/index.tsx",[],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/article-comments/index.tsx",[],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/project-add/index.tsx",["224"],"import React, { useEffect, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport PageLayout from '../../common/components/page-layout'\nimport Add from './add'\nimport { fetchProjectId } from '../../utils/api'\nimport { useQuery } from '../../utils/index'\nconst ProjectAdd = (props: any) => {\n  const [project, setProject] = useState({})\n  const [name, setName] = useState({})\n  let location = useLocation()\n  const query = useQuery()\n  // 获取编辑数据\n  useEffect(() => {\n    (async () => {\n      const id = query.get('id')\n      if (id) { \n        const { data } = await fetchProjectId(id)\n        if (data.code) {\n          setProject(data.result)\n          setName('编辑项目')\n        }\n      } else {\n        setProject({})\n        setName('新增项目')\n      }\n    })()\n  }, [location])\n  return <PageLayout title={name + ''}>\n    <Add {...props} project={project} />\n  </PageLayout>\n}\n\nexport default ProjectAdd\n","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/categories/index.tsx",["225"],"import React, { useState, useEffect } from 'react'\nimport { Table, Input, message, Popconfirm } from 'antd'\nimport { columns } from './article-config'\nimport PageLayout from '../../common/components/page-layout'\nimport { getCategory, editeCategory, delCategory } from '../../utils/api'\nimport { Operate } from './oprations'\nimport './index.scss'\n\nconst editPrams: any = {}\n\nfunction EditCell (props: any) {\n  const { editing, children, col, rowIndex, record} = props\n  let res:any = null\n  if (col && col.editable && col.editable) {\n    const change = (e: React.ChangeEvent<HTMLInputElement>) => {\n      editPrams[col.key] = e.currentTarget.value\n      editPrams.index = rowIndex\n    }\n    res = editing ? <Input defaultValue={record[col.key]} onChange={change} /> : <div>{record[col.key]}</div>\n  } else {\n    res = col && col.dataIndex === 'operation' ? <Operate {...props} editing={editing} /> : children\n  }\n  return <td>{res}</td>\n}\n\nconst Category = () => {\n  const [tableData, setTableData] = useState([]) \n  const [editingKey, setEditingKey] = useState(-1)\n  const [refresh, setRefresh] = useState(1)\n  useEffect(() => {\n    (async () => {\n      const { data } = await getCategory()\n      setTableData(data.result || [])\n      cancel()\n    })()\n  }, [refresh])\n  async function save (record:any) {\n    if (editPrams.index === null) return\n    let prams = {...record, ...editPrams}\n    const { data } = await editeCategory({id: prams.id, name: prams.name, desc: prams.desc})\n    if(data.code){\n      message.success(data.message)\n    }\n    prams = null\n    setRefresh(refresh+1)\n  }\n  function edit (index:number) {\n    editPrams.index = null\n    setEditingKey(index)\n  }\n  function cancel () {\n    setEditingKey(-1)\n  }\n  async function del (record:any) {\n    if (editPrams.index === null) return\n    const { data } = await delCategory(record.id)\n    if (data.code){\n      message.success(data.message)\n    }\n    setRefresh(refresh+1)\n  }\n\n  function isEditing (index:number) {\n    return index === editingKey\n  }\n\n  const tableColumns = columns.map(col => {\n    if (col.editable) {\n      return {\n        ...col,\n        onCell: (record:any, rowIndex: number) => ({ record, col, rowIndex, editing: isEditing(rowIndex) })\n      }\n    } else if (col.dataIndex === 'operation') {\n      return { ...col, onCell: (record:any, rowIndex: number) => ({col, record, save, edit, cancel, del, rowIndex, editing: isEditing(rowIndex) }) }\n    } else {\n      return col\n    }\n  })\n  const components = { body: { cell: EditCell } }\n  return <>\n    <PageLayout title='类目列表'>\n      <Table components={components} columns={tableColumns as any } dataSource={tableData} bordered size='middle' rowKey='id' />\n    </PageLayout>\n  </>\n}\n\nexport default Category\n","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/tags/index.tsx",["226"],"import React, { useState, useEffect } from 'react'\nimport { Table, Input, message, Popconfirm } from 'antd'\nimport { columns } from './article-config'\nimport PageLayout from '../../common/components/page-layout'\nimport { fetchTag, editeTag, delTag } from '../../utils/api'\nimport { Operate } from './oprations'\nimport './index.scss'\n\nconst editPrams: any = {}\n\nfunction EditCell (props: any) {\n  const { editing, children, col, rowIndex, record} = props\n  let res:any = null\n  if (col && col.editable && col.editable) {\n    const change = (e: React.ChangeEvent<HTMLInputElement>) => {\n      editPrams[col.key] = e.currentTarget.value\n      editPrams.index = rowIndex\n    }\n    res = editing ? <Input defaultValue={record[col.key]} onChange={change} /> : <div>{record[col.key]}</div>\n  } else {\n    res = col && col.dataIndex === 'operation' ? <Operate {...props} editing={editing} /> : children\n  }\n  return <td>{res}</td>\n}\n\nconst Tag = () => {\n  const [tableData, setTableData] = useState([]) \n  const [editingKey, setEditingKey] = useState(-1)\n  const [refresh, setRefresh] = useState(1)\n  useEffect(() => {\n    (async () => {\n      const { data } = await fetchTag()\n      setTableData(data.result.list || [])\n      cancel()\n    })()\n  }, [refresh])\n  async function save (record:any) {\n    if (editPrams.index === null) return\n    let prams = {...record, ...editPrams}\n    const { data } = await editeTag({id: prams.id, name: prams.name, desc: prams.desc})\n    if(data.code){\n      message.success(data.message)\n    }\n    prams = null\n    setRefresh(refresh+1)\n  }\n  function edit (index:number) {\n    editPrams.index = null\n    setEditingKey(index)\n  }\n  function cancel () {\n    setEditingKey(-1)\n  }\n  async function del (record:any) {\n    if (editPrams.index === null) return\n\n    const { data } = await delTag(record.id)\n    if (data.code){\n      message.success(data.message)\n    }\n    setRefresh(refresh+1)\n  }\n\n  function isEditing (index:number) {\n    return index === editingKey\n  }\n\n  const tableColumns = columns.map(col => {\n    if (col.editable) {\n      return {\n        ...col,\n        onCell: (record:any, rowIndex: number) => ({ record, col, rowIndex, editing: isEditing(rowIndex) })\n      }\n    } else if (col.dataIndex === 'operation') {\n      return { ...col, onCell: (record:any, rowIndex: number) => ({col, record, save, edit, cancel, del, rowIndex, editing: isEditing(rowIndex) }) }\n    } else {\n      return col\n    }\n  })\n  const components = { body: { cell: EditCell } }\n  return <>\n    <PageLayout title='标签列表'>\n      <Table components={components} columns={tableColumns as any } dataSource={tableData} bordered size='middle' rowKey='id' />\n    </PageLayout>\n  </>\n}\n\nexport default Tag\n","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/home/index.tsx",[],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/category-add/index.tsx",[],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/tag-add/index.tsx",[],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/projects/index.tsx",["227"],"import React, { useState, useEffect } from 'react'\nimport { Table, message } from 'antd'\nimport { columns } from './article-config'\nimport PageLayout from '../../common/components/page-layout'\nimport { fetchProject, delProject } from '../../utils/api'\nimport { Operate } from './oprations'\nimport './index.scss'\n\nfunction EditCell (props: any) {\n  const { children, col} = props\n  return <td>{col && col.dataIndex === 'operation' ? <Operate {...props} /> : children}</td>\n}\n\nconst Projects = (props:any) => {\n  const [tableData, setTableData] = useState([]) \n  const [refresh, setRefresh] = useState(1)\n  const [page, setPage] = useState({ current: 1, total: 0 })\n  useEffect(() => {\n    (async () => {\n      const { data } = await fetchProject({current_page: page.current})\n      setTableData(data.result.list || [])\n      setPage({current: data.result.pagination.current_page, total: data.result.pagination.total})\n    })()\n  }, [refresh])\n\n  function edit (id:string) {\n    props.history.push(`/project-add?id=${id}`)\n  }\n  async function del (id:string) {\n    const {data} = await delProject(id)\n    setRefresh(refresh+1)\n    setPage({ current: 1, total: 0 })\n    message.success(data.message)\n  }\n\n  const tableColumns = columns.map(col => {\n    if (col.dataIndex === 'operation') {\n      return { ...col, onCell: (record:any, rowIndex: number) => ({col, record, edit, del, rowIndex }) }\n    } else {\n      return col\n    }\n  })\n  const components = { body: { cell: EditCell } }\n  return <PageLayout title='项目管理'>\n    <Table components={components}\n      columns={tableColumns as any}\n      dataSource={tableData}\n      bordered\n      size='middle'\n      rowKey='id'\n      pagination={page} />\n  </PageLayout>\n}\n\nexport default Projects\n","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/utils/api.ts",[],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/utils/index.ts",[],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/common/layout/main.tsx",[],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/common/layout/side.tsx",[],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/article-list/article-config.tsx",["228"],"import React from 'react'\nimport { Tag } from 'antd'\nimport dayjs from 'dayjs'\nexport interface recordType{\n  name: string\n}\n\nconst colorArr = ['magenta', 'geekblue', 'red', 'volcano', 'orange', 'gold', 'lime', 'green', 'cyan', 'purple']\nexport const columns = [\n  {\n    title: '#',\n    width: 50,\n    key: 'tindex',\n    render: (text: string, record: any, dataIndex: number) => {\n      return(\n        <span>{dataIndex+1}</span>\n      )\n    }\n  },\n  {\n    title: '标题',\n    width: 280,\n    dataIndex: 'title',\n    key: 'title',\n    ellipsis: true,\n    render: (text: string, record: any, dataIndex: number) => {\n      return(\n        <span>{record.title}</span>\n      )\n    }\n  },\n  {\n    title: '标签',\n    key: 'tag',\n    width: 250,\n    render: (record: any) => {\n      return (\n        <span>\n          {record.tag? record.tag.map((item:any, index: number) => {\n            return (\n              <Tag color={colorArr[index] || 'red'} key={item.id}>\n                {item.name}\n              </Tag>\n            )\n          }): ''}\n        </span>\n      )\n    }\n  },\n  {\n    title: '更新日期',\n    width: 250,\n    dataIndex: 'update_time',\n    key: 'update_time',\n    render: (text: string, record: any, dataIndex: number) => {\n      return(\n        // <div>{dayjs(text).format('YYYY-MM-DD HH:mm:ss')}</div> \n        <div>{record.update_time}</div>\n      )\n    }\n  },\n  {\n    title: '信息',\n    dataIndex: 'meta',\n    key: 'meta',\n    render: (text: string, record: any, dataIndex: number) => {\n      return(\n        <div>\n          <p>\n            浏览：{record.viewCount} &emsp; 喜欢：{record.likeCount}&emsp;&ensp;\n            <span style={{color:'#00CC00'}}>是否置顶：{record.top +''}</span>&emsp;\n            <span style={{color:'#FF8F59'}}>是否公开: {record.publish +''}</span>\n          </p>\n        </div>\n      )\n    }\n  },\n  {\n    title: '编辑',\n    key: 'operation',\n    dataIndex: 'operation',\n    width: 150\n  }\n]\n","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/article-add/base-info.tsx",["229","230"],"import React from 'react'\nimport { Form, Input, InputNumber, Col, Select, Switch } from 'antd'\nimport { FormProps } from 'antd/es/form'\nimport { fetchTag, getSuperUser, getCategory} from '../../utils/api'\nconst { Option } = Select\n\n\ninterface IFormComponentProps<T> extends FormProps<T> {\n  article: any,\n  wrappedComponentRef: any,\n  submit: any\n}\n\n// 必须是class 形式才能通过 wrappedComponentRef 拿到实例\nclass BaseInfo extends React.Component<IFormComponentProps<any>> {\n  constructor(props: any) {\n    super(props)\n    this.handleChange = this.handleChange.bind(this)\n    this.categoryHandleChange = this.categoryHandleChange.bind(this)\n    this.superUserHandleChange = this.superUserHandleChange.bind(this)\n    this.switchChange = this.switchChange.bind(this)\n  }\n  state = {\n    allTags: [],\n    tagIds: [],\n    allCategories:[],\n    categoriesId:[],\n    allAuthor: [],\n    authorId: [],\n    article: this.props.article\n  }\n  async componentDidMount () {\n    const { data } = await fetchTag()\n    const superUser = await getSuperUser()\n    const categories  = await getCategory()\n    this.setState({\n      allTags: data.result.list || [],\n      allAuthor: superUser.data.result || [],\n      allCategories: categories.data.result || [],\n    })\n  }\n  componentWillReceiveProps(nextProps: any) {\n    const article = nextProps.article\n    console.log('nextProps -->>')\n    console.log(nextProps)\n    if (article.id) {\n      const tagIds = article.tag ? article.tag.map((item:any) => item.id) : []\n      this.setState({\n        article: article,\n        tagIds,\n        categoriesId: article.category.id,\n        authorId: article.author.id,\n      });\n    }\n  }\n  handleChange(value: any) {\n    this.setState({tagIds: value})\n  }\n  categoryHandleChange(value: any){\n    this.setState({categoriesId: value})\n  }\n  superUserHandleChange(value: any){\n    this.setState({authorId: value})\n  }\n  onFinish = () => {\n    this.props.submit(this.state.article, this.state.tagIds, this.state.categoriesId, this.state.authorId)\n  };\n  inputChange(key: string, e: any) {\n    this.setState({\n      article: {\n        ...this.state.article,\n        [key]: e.target.value\n      }\n    });\n  }\n  inputNumberChange(key: string, value: any) {\n    console.log('key - e:' + key, value)\n    this.setState({\n      article: {\n        ...this.state.article,\n        [key]: value\n      }\n    });\n  }\n  switchChange(key: string, checked: boolean) {\n    this.setState({\n      article: {\n        ...this.state.article,\n        [key]: checked ? true : false\n      }\n    },()=>{});\n  }\n  render () {\n    const { allTags, article, tagIds, allAuthor, authorId, allCategories, categoriesId } = this.state\n    const title = article.title || ''\n    const desc = article.desc || ''\n    const viewCount = article.viewCount || 1\n    const likeCount = article.likeCount || 1\n    console.log('tagIds | authorId | categoriesId')\n    console.info(tagIds, authorId, categoriesId)\n    return (\n      <div className=\"baseInfo\">\n        <Form layout=\"inline\"\n          labelCol={{ span: 4 }}\n          wrapperCol={{ span: 20 }}\n          ref={this.props.wrappedComponentRef}\n          onFinish={this.onFinish}>\n          <Col span={10}>\n            <Form.Item label=\"标题\" rules={[{ required: true, message: '请输入标题!' }]}>\n              <Input placeholder=\"请输入标题\" value={title} onChange={(e) => this.inputChange('title', e)} />\n            </Form.Item>\n          </Col>\n          <Col span={14}>\n            <Form.Item label=\"描述\" rules={[{ required: true, message: '请输入标题!' }]}>\n              <Input placeholder=\"请输入简短的描述\" value={desc} onChange={(e) => this.inputChange('desc', e)} />\n            </Form.Item>\n          </Col>\n          <Col span={10}>\n            <Form.Item label=\"类目\" rules={[{ required: true, message: '请选择类目!' }]}>\n                <Select\n                  value={!categoriesId.length?\"请选择类目\":categoriesId}\n                  onChange={this.categoryHandleChange} \n                  style={{ width: 200 }}\n                >\n                {\n                  allCategories.map((item: any) => <Option key={item.id} value={item.id}>{item.name}</Option>)\n                }\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col span={10}>\n            <Form.Item label=\"作者\" rules={[{ required: true, message: '请选择文章作者!' }]}>\n              <Select\n                value={!authorId.length?\"请选择作者\":authorId}\n                onChange={this.superUserHandleChange}\n                style={{ width: 200 }}\n              >\n                {\n                  allAuthor.map((item: any) => <Option key={item.id} value={item.id}>{item.name}</Option>)\n                }\n              </Select>\n            </Form.Item>\n          </Col>\n          \n          <Col span={20}>\n            <Form.Item label=\"标签\" rules={[{ required: true, message: '请选择标签!' }]}>\n              <Select\n                mode=\"multiple\"\n                placeholder=\"请选择标签\"\n                value={tagIds}\n                onChange={this.handleChange}\n              >\n                {\n                  allTags.map((item: any) => <Option key={item.id} value={item.id}>{item.name}</Option>)\n                }\n              </Select>\n            </Form.Item>\n          </Col>\n          \n          <Col span={10}>\n            <Form.Item label=\"阅读量\" rules={[{ required: true, message: '请输入阅读量' }]}>\n              <InputNumber \n                // defaultValue={viewCount}\n                value={viewCount}\n                onChange={(e) => this.inputNumberChange('viewCount', e)}\n                formatter={value => `${value}`}\n                // parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n              />\n            </Form.Item>\n          </Col>\n          <Col span={10}>\n          <Form.Item label=\"点赞量\" rules={[{ required: true, message: '请输入点赞量' }]}>\n              <InputNumber \n                value={likeCount}\n                onChange={(e) => this.inputNumberChange('likeCount', e)} \n                formatter={value => `${value}`}\n                // parser={value => value.replace(/\\D/g,'')}\n              />\n            </Form.Item>\n          </Col>\n          <Col span={10}>\n            <Form.Item label=\"是否置顶\" rules={[{ required: true, message: '是否置顶' }]}>\n              <Switch checkedChildren=\"置顶\" unCheckedChildren=\"正常\" checked={ article.top == '1' } onChange={(checked: boolean) => this.switchChange('top', checked) } />\n            </Form.Item>\n          </Col>\n          <Col span={14}>\n            <Form.Item label=\"是否公开\" rules={[{ required: true, message: '是否是公开文章!' }]}>\n              <Switch checkedChildren=\"公开\" unCheckedChildren=\"私密\" checked={ article.publish == '1' } onChange={(checked: boolean) => this.switchChange('publish', checked) } />\n            </Form.Item>\n          </Col>\n        </Form>\n      </div>\n    )\n  }\n}\n\nexport default BaseInfo\n","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/article-add/edit.tsx",[],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/messages-list/article-config.tsx",[],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/article-comments/oprations.tsx",["231"],"import React from 'react'\nimport { useState } from 'react'\nimport { Divider, Button, Popconfirm } from 'antd'\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nexport function Operate (props: any) {\n  const { editing, rowIndex, record} = props\n  const [visible, setVisible] = useState(false);\n  // open sure pop\n  const showPopconfirm = () => {\n    setVisible(true);\n  };\n  // close sure pop\n  function cancel (){\n    setVisible(false);\n  }\n  return (\n    <div className=\"btnbox1\">\n      {\n        editing ? (\n          <>\n            <Button type=\"link\" onClick={() => props.cancel()}>取消</Button>\n            <Divider type=\"vertical\" />\n            <Button type=\"link\" onClick={() => props.save(record)}>保存</Button>\n          </>\n        ) : (\n          <>\n            <Button type=\"link\" onClick={() => props.edit(rowIndex)}>修改</Button>\n            <Divider type=\"vertical\" />\n            <Popconfirm \n              title=\"Are you sure？\" \n              icon={<QuestionCircleOutlined />}\n              style={{ color: 'red' }}\n              onConfirm={() => props.del(record)}\n              onCancel={cancel}\n            >\n              <Button type=\"link\" onClick={showPopconfirm}>删除</Button>\n            </Popconfirm>\n          </>\n        )\n      }\n    </div>\n  )\n}\n","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/article-comments/article-config.tsx",[],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/messages-list/oprations.tsx",["232"],"import React from 'react'\nimport { useState } from 'react'\nimport { Divider, Button, Popconfirm } from 'antd'\nimport { QuestionCircleOutlined } from '@ant-design/icons';\n\nexport function Operate (props: any) {\n  const { editing, rowIndex, record} = props\n  const [visible, setVisible] = useState(false);\n  // open sure pop\n  const showPopconfirm = () => {\n    setVisible(true);\n  };\n  // close sure pop\n  function cancel (){\n    setVisible(false);\n  }\n\n  return (\n    <div className=\"btnbox\">\n      {\n        editing ? (\n          <>\n            <Button type=\"link\" onClick={() => props.cancel()}>取消</Button>\n            <Divider type=\"vertical\" />\n            <Button type=\"link\" onClick={() => props.save(record)}>保存</Button>\n          </>\n        ) : (\n          <>\n            <Button type=\"link\" onClick={() => props.edit(rowIndex)}>修改</Button>\n            <Divider type=\"vertical\" />\n            <Popconfirm \n              title=\"Are you sure？\" \n              icon={<QuestionCircleOutlined />}\n              style={{ color: 'red' }}\n              onConfirm={() => props.del(record)}\n              onCancel={cancel}\n            >\n              <Button type=\"link\" onClick={showPopconfirm}>删除</Button>\n            </Popconfirm>\n          </>\n        )\n      }\n    </div>\n  )\n}\n","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/project-add/add.tsx",[],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/projects/oprations.tsx",["233"],"import React from 'react'\nimport { useState } from 'react'\nimport { Divider, Button, Popconfirm } from 'antd'\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nexport function Operate (props: any) {\n  const { record} = props\n  const [visible, setVisible] = useState(false);\n  // open sure pop\n  const showPopconfirm = () => {\n    setVisible(true);\n  };\n  // close sure pop\n  function cancel (){\n    setVisible(false);\n  }\n  return (\n    <div className=\"btnbox\">\n      <Button type=\"link\" onClick={() => props.edit(record.id)}>编辑</Button>\n      <Divider type=\"vertical\" />\n      <Popconfirm \n        title=\"Are you sure？\" \n        icon={<QuestionCircleOutlined />}\n        style={{ color: 'red' }}\n        onConfirm={() => props.del(record.id)}\n        onCancel={cancel}\n      >\n        <Button type=\"link\" onClick={showPopconfirm}>删除</Button>\n      </Popconfirm>\n    </div>\n  )\n}\n","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/projects/article-config.tsx",["234"],"import React from 'react'\nimport { ColumnProps } from 'antd/es/table'\n\nexport interface recordType{\n  name: string\n}\n\nexport const columns:ColumnProps<any>[] = [\n  {\n    title: '#',\n    width: 50,\n    key: 'tindex',\n    render: (text, record, dataIndex) => <span>{dataIndex + 1}</span>\n  },\n  {\n    title: '标题',\n    dataIndex: 'title',\n    width: 150,\n    key: 'title',\n    render: (text, record, dataIndex) => {\n      return <a href={record.github} target=\"_blank\">{text}</a>\n    }\n  },\n  {\n    title: 'icon图标',\n    key: 'icon',\n    dataIndex: 'icon',\n    width: 200,\n  },\n  {\n    title: '预览地址',\n    key: 'view',\n    dataIndex: 'view'\n  },\n  {\n    title: 'github地址',\n    key: 'github',\n    dataIndex: 'github'\n  },\n  {\n    title: '编辑',\n    key: 'operation',\n    dataIndex: 'operation',\n    width: 120\n  }\n]\n","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/category-add/add.tsx",[],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/tag-add/add.tsx",[],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/tags/oprations.tsx",["235","236"],"import React from 'react'\nimport { useState, useEffect } from 'react'\nimport { Divider, Button, Popconfirm } from 'antd'\nimport { QuestionCircleOutlined } from '@ant-design/icons';\n\nexport function Operate (props: any) {\n  const { editing, rowIndex, record} = props\n  const [visible, setVisible] = useState(false);\n  // open sure pop\n  const showPopconfirm = () => {\n    setVisible(true);\n  };\n  // close sure pop\n  function cancel (){\n    setVisible(false);\n  }\n  return (\n    <div className=\"btnBox\">\n      {\n        editing ? (\n          <>\n            <Button type=\"link\" onClick={() => props.cancel()}>取消</Button>\n            <Divider type=\"vertical\" />\n            <Button type=\"link\" onClick={() => props.save(record)}>保存</Button>\n          </>\n        ) : (\n          <>\n            <Button type=\"link\" onClick={() => props.edit(rowIndex)}>修改</Button>\n            <Divider type=\"vertical\" />\n            <Popconfirm \n              title=\"Are you sure？\" \n              icon={<QuestionCircleOutlined />}\n              style={{ color: 'red' }}\n              onConfirm={() => props.del(record)}\n              onCancel={cancel}\n            >\n              <Button type=\"link\" onClick={showPopconfirm}>删除</Button>\n            </Popconfirm>\n          </>\n        )\n      }\n    </div>\n  )\n}\n","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/tags/article-config.tsx",[],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/categories/oprations.tsx",["237","238"],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/categories/article-config.tsx",[],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/common/components/page-layout.tsx",[],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/utils/config.ts",[],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/utils/http.ts",["239"],"import axios, { AxiosRequestConfig, AxiosResponse } from 'axios'\nimport { message, Modal } from 'antd'\nimport { API_ROOT } from './config'\nimport isLogin from './login'\nimport {handleCheckRefreshToken} from './api'\nconst LOGIN_PATH = 'user/login/'\nconst confirm = Modal.confirm;\nexport const http = axios.create({\n  baseURL: API_ROOT\n})\n\nexport const getAccessToken = () => {\n  let str: string = ''\n  if (window.localStorage.getItem('TOKEN')) {\n    str = `${JSON.parse(window.localStorage.getItem('TOKEN') || '').access_token}`\n  }\n  return str\n}\n\nexport const getRefreshToken= () => {\n  let refresh_token: string = ''\n  if (window.localStorage.getItem('TOKEN')) {\n    refresh_token = `${JSON.parse(window.localStorage.getItem('TOKEN') || '').refresh_token}`\n  }\n  return refresh_token\n}\n// 拦截器\nhttp.interceptors.request.use((config: AxiosRequestConfig) => {\n  config.headers['x-access-token'] = getAccessToken()\n  config.headers['channel'] = 'admin'\n  return config\n}, (error) => {\n  return Promise.reject(error)\n})\n\nhttp.interceptors.response.use((response: AxiosResponse<any>): AxiosResponse<any> | Promise<AxiosResponse<any>> => {\n  let { data, status} = response\n  // console.log('login:');console.log(response)\n  // access_token 过期, 返回新access_token, 及 refresh_token\n  if (status && status === 253) {\n    // console.error('status:' + status, data.error)\n    let newToken = handleCheckRefreshToken({'refresh_token': getRefreshToken()})\n    newToken.then((v)=>{\n      window.localStorage.setItem('TOKEN', JSON.stringify(v.data.result.tokens))\n    })\n  }\n  // refesh_token 过期\n  if (status && status === 252) {\n    // console.error('status:' + status, data.error)\n    window.location.href = '/login'\n  }\n\n  if (response.config.url !== LOGIN_PATH && !isLogin()) {\n    confirm({\n      title: '提示!',\n      content: '用户信息已过期，请点击确定后重新登录。',\n      okText: '确定',\n      // cancelText: '取消',\n      onOk() {\n        window.location.href = '/login'\n      }\n    })\n  } else if (response.data.code !== 200 && [250,251,252,253].includes(status)) {\n    message.error(response.data.message || response.data.error)\n  }\n  return response\n}, (error: any) => {\n  if (!isLogin()) {\n    confirm({\n      title: '提示!',\n      content: '用户信息已过期，请点击确定后重新登录。',\n      okText: '确定',\n      // cancelText: '取消',\n      onOk() {\n        window.location.href = '/login'\n      }\n    })\n  }\n  return Promise.reject(error)\n})\n","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/utils/login.ts",["240"],"/**\n * 是否已经登录或者 token 超时\n *\n * @export\n * @returns { boolean }\n */\nexport default () => {\n\tif (!window.localStorage.getItem('TOKEN')) {\n\t\treturn false\n\t}\n  const tokens = JSON.parse(window.localStorage.getItem('TOKEN') || '')\n\tif (!tokens.access_token || !tokens.refresh_token) {\n\t\treturn false\n\t}\n\treturn true\n}\n","/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/utils/public.ts",[],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/pages/project-add/config.ts",[],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/common/layout/menu.tsx",[],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/common/components/header-title/index.tsx",[],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/common/components/bicon.tsx",[],"/Users/dingwei/personalObj/tornado-blog/tornado-blog-admin/src/common/layout/menu-config.ts",[],{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","severity":1,"message":"246","line":19,"column":10,"nodeType":"247","messageId":"248","endLine":19,"endColumn":17},{"ruleId":"249","severity":1,"message":"250","line":32,"column":6,"nodeType":"251","endLine":32,"endColumn":12,"suggestions":"252"},{"ruleId":"245","severity":1,"message":"253","line":39,"column":9,"nodeType":"247","messageId":"248","endLine":39,"endColumn":23},{"ruleId":"245","severity":1,"message":"254","line":50,"column":12,"nodeType":"247","messageId":"248","endLine":50,"endColumn":18},{"ruleId":"249","severity":1,"message":"255","line":112,"column":6,"nodeType":"251","endLine":112,"endColumn":16,"suggestions":"256"},{"ruleId":"249","severity":1,"message":"255","line":27,"column":6,"nodeType":"251","endLine":27,"endColumn":16,"suggestions":"257"},{"ruleId":"245","severity":1,"message":"258","line":2,"column":33,"nodeType":"247","messageId":"248","endLine":2,"endColumn":43},{"ruleId":"245","severity":1,"message":"258","line":2,"column":33,"nodeType":"247","messageId":"248","endLine":2,"endColumn":43},{"ruleId":"249","severity":1,"message":"250","line":24,"column":6,"nodeType":"251","endLine":24,"endColumn":15,"suggestions":"259"},{"ruleId":"245","severity":1,"message":"260","line":3,"column":8,"nodeType":"247","messageId":"248","endLine":3,"endColumn":13},{"ruleId":"261","severity":1,"message":"262","line":183,"column":89,"nodeType":"263","messageId":"264","endLine":183,"endColumn":91},{"ruleId":"261","severity":1,"message":"262","line":188,"column":93,"nodeType":"263","messageId":"264","endLine":188,"endColumn":95},{"ruleId":"245","severity":1,"message":"246","line":7,"column":10,"nodeType":"247","messageId":"248","endLine":7,"endColumn":17},{"ruleId":"245","severity":1,"message":"246","line":8,"column":10,"nodeType":"247","messageId":"248","endLine":8,"endColumn":17},{"ruleId":"245","severity":1,"message":"246","line":7,"column":10,"nodeType":"247","messageId":"248","endLine":7,"endColumn":17},{"ruleId":"265","severity":1,"message":"266","line":21,"column":14,"nodeType":"267","endLine":21,"endColumn":54},{"ruleId":"245","severity":1,"message":"268","line":2,"column":20,"nodeType":"247","messageId":"248","endLine":2,"endColumn":29},{"ruleId":"245","severity":1,"message":"246","line":8,"column":10,"nodeType":"247","messageId":"248","endLine":8,"endColumn":17},{"ruleId":"245","severity":1,"message":"268","line":2,"column":20,"nodeType":"247","messageId":"248","endLine":2,"endColumn":29},{"ruleId":"245","severity":1,"message":"246","line":8,"column":10,"nodeType":"247","messageId":"248","endLine":8,"endColumn":17},{"ruleId":"245","severity":1,"message":"269","line":37,"column":9,"nodeType":"247","messageId":"248","endLine":37,"endColumn":13},{"ruleId":"270","severity":1,"message":"271","line":7,"column":1,"nodeType":"272","endLine":16,"endColumn":2},"no-native-reassign",["273"],"no-negated-in-lhs",["274"],"@typescript-eslint/no-unused-vars","'visible' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'page'. Either include it or remove the dependency array.","ArrayExpression",["275"],"'showPopconfirm' is assigned a value but never used.","'cancel' is defined but never used.","React Hook useEffect has a missing dependency: 'query'. Either include it or remove the dependency array.",["276"],["277"],"'Popconfirm' is defined but never used.",["278"],"'dayjs' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'useEffect' is defined but never used.","'data' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"281","fix":"283"},{"desc":"284","fix":"285"},"Update the dependencies array to be: [load, page]",{"range":"286","text":"287"},"Update the dependencies array to be: [location, query]",{"range":"288","text":"289"},{"range":"290","text":"289"},"Update the dependencies array to be: [page, refresh]",{"range":"291","text":"292"},[1235,1241],"[load, page]",[3712,3722],"[location, query]",[786,796],[931,940],"[page, refresh]"]